<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ramin's Homepage</title><link>https://mrnabati.github.io/</link><description>Recent content on Ramin's Homepage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Jun 2020 20:17:31 -0400</lastBuildDate><atom:link href="https://mrnabati.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Adv. PyTorch: Configuring MS Visual Studio for Using PyToch C++ API in Windows</title><link>https://mrnabati.github.io/posts/004_adv_pytorch_integrating_pytorch_cpp_frontend_in_visual_studio_on_windows/</link><pubDate>Mon, 22 Jun 2020 20:17:31 -0400</pubDate><guid>https://mrnabati.github.io/posts/004_adv_pytorch_integrating_pytorch_cpp_frontend_in_visual_studio_on_windows/</guid><description>This tutorial will walk you through the required steps to configure and use the PyTorch C++ API (LibTorch) in Microsoft Visual Studio. Although the recommended build system for LibTorch is CMake, you might find yourself in situations where you need to integrate your code into an existing Visual Studio Project/Solution and don&amp;rsquo;t want to deal with CMake files in Windows. Following the steps in this tutorial should get you up and running with LibTorch in Visual Studio without needing to use CMake to build it.</description></item><item><title>Adv. PyTorch: Modifying the Last Layer</title><link>https://mrnabati.github.io/posts/003_adv_pytorch_modifying_the_last_layer/</link><pubDate>Sun, 21 Jun 2020 16:42:11 -0400</pubDate><guid>https://mrnabati.github.io/posts/003_adv_pytorch_modifying_the_last_layer/</guid><description>All the pre-trained models provided in the torchvision package in PyTorch are trained on the ImageNet dataset and can be used out of the box on this dataset. But often times you want to use these models on other available image datasets or even your own custom dataset. This usually requires modifying and fine-tuning the model to work with the new dataset. Changing the output dimension of the last layer in the model is usually among the first changes you need to make, and that&amp;rsquo;s the focus of this post.</description></item><item><title>Adv. PyTorch: Freezing Layers</title><link>https://mrnabati.github.io/posts/002_adv_pytorch_freezing_layers/</link><pubDate>Fri, 22 May 2020 13:42:11 -0400</pubDate><guid>https://mrnabati.github.io/posts/002_adv_pytorch_freezing_layers/</guid><description>If you&amp;rsquo;re planning to fine-tune a trained model on a different dataset, chances are you&amp;rsquo;re going to freeze some of the early layers and only update the later layers. I won&amp;rsquo;t go into the details of why you may want to freeze some layers and which ones should be frozen, but I&amp;rsquo;ll show you how to do it in PyTorch. Let&amp;rsquo;s get started!
We first need a pre-trained model to start with.</description></item><item><title>CenterFusion</title><link>https://mrnabati.github.io/posts/projects/06_centerfusion/</link><pubDate>Sun, 10 May 2020 17:25:44 -0400</pubDate><guid>https://mrnabati.github.io/posts/projects/06_centerfusion/</guid><description>A center-based radar and camera fusion for 3D object detection in autonomous vehicles.</description></item><item><title>Radar Region Proposal Network</title><link>https://mrnabati.github.io/posts/projects/04_rrpn/</link><pubDate>Sun, 10 May 2020 17:25:44 -0400</pubDate><guid>https://mrnabati.github.io/posts/projects/04_rrpn/</guid><description>Radar Region Proposal Network (RRPN) uses Radar detections in an autonomous vehicle to generate real-time region proposals for two-stage object detection networks.</description></item><item><title>Radar-Camera Sensor Fusion and Depth Estimation</title><link>https://mrnabati.github.io/posts/projects/05_radar_camera_fusion/</link><pubDate>Sun, 10 May 2020 17:25:44 -0400</pubDate><guid>https://mrnabati.github.io/posts/projects/05_radar_camera_fusion/</guid><description>A novel radar-camera sensor fusion framework for accurate object detection and distance estimation in autonomous vehicles.</description></item><item><title>EcoCAR Mobility Challenge</title><link>https://mrnabati.github.io/posts/projects/03_ecocarmc/</link><pubDate>Thu, 22 Nov 2018 23:55:33 +0000</pubDate><guid>https://mrnabati.github.io/posts/projects/03_ecocarmc/</guid><description>The EcoCAR Mobility Challenge tasks 12 North American universities to apply advanced propulsion systems, electrification, SAE Level 2 automation, and vehicle connectivity to improve the energy efficiency of a 2019 Chevrolet Blazer.</description></item><item><title>Enabling CAN on Nvidia Jetson Xavier</title><link>https://mrnabati.github.io/posts/000_enabling_can_on_nvidia_jetson_xavier_developer_kit/</link><pubDate>Fri, 09 Nov 2018 20:28:20 +0000</pubDate><guid>https://mrnabati.github.io/posts/000_enabling_can_on_nvidia_jetson_xavier_developer_kit/</guid><description>This tutorial covers the step by step process of integrating CAN transceivers and enabling the CAN controllers on an Nvidia Jetson Xavier developer kit.</description></item><item><title>Installing NVMe SSD on Nvidia Jetson Xavier</title><link>https://mrnabati.github.io/posts/001_installing_nvme_ssd_jetson_xavier/</link><pubDate>Fri, 09 Nov 2018 20:28:20 +0000</pubDate><guid>https://mrnabati.github.io/posts/001_installing_nvme_ssd_jetson_xavier/</guid><description>This tutorial covers the process of installing an NVMe M.2 SSD on the Nvidia Jetson Xavier developer kit.</description></item><item><title>EcoCAR 3</title><link>https://mrnabati.github.io/posts/projects/02_ecocar3/</link><pubDate>Thu, 21 Jun 2018 00:07:38 +0000</pubDate><guid>https://mrnabati.github.io/posts/projects/02_ecocar3/</guid><description>EcoCAR3 challenged 16 North American university teams to redesign a 2016 Chevrolet Camaro. The ADAS team focused on integrating the sensing system on the Camaro and deploy driver feedback to improve efficiency and safety.</description></item><item><title>Spacenet 3: Road Network Detection</title><link>https://mrnabati.github.io/posts/projects/01_spacenet/</link><pubDate>Fri, 12 Jan 2018 19:47:25 -0400</pubDate><guid>https://mrnabati.github.io/posts/projects/01_spacenet/</guid><description>The Spacenet 3 challenge is focused on determining road networks and routing information directly from satellite imagery. The SpaceNet 3 Dataset contains ~8,000 km of roads across the four SpaceNet Areas of Interest.</description></item><item><title>IARPA fMoW Challenge</title><link>https://mrnabati.github.io/posts/projects/00_fmow/</link><pubDate>Sat, 30 Dec 2017 01:59:55 -0400</pubDate><guid>https://mrnabati.github.io/posts/projects/00_fmow/</guid><description>The IARPA Functional Map of the World (fMoW) challenge focuses on promoting research in object identification and classification to automatically identify facility, building, and land use from satellite imagery. The dataset consists of 4- and 8-band multispectral images in 63 categories.</description></item></channel></rss>